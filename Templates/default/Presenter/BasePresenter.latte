{syntax double}{{$phpTag|noescape}}
namespace App{{$moduleName}}\Presenters;
use \Nette\Application\UI\Form;

abstract class BasePresenter extends \Nette\Application\UI\Presenter {
    /** @var \Nette\DI\Container @inject */
    public $container;
    /** @var string */
    protected $id, $name, $page, $orderBy, $orderHow, $search, $input, $afterEdit;
    
    public function startup() {
        parent::startup();
        $this->template->itemsPerPage = $this->container->parameters['application']['itemsPerPage'];
        $this->template->pageLimit = $this->container->parameters['application']['pageLimit'];
    }
    
    public function renderList($id, $page, $orderBy, $orderHow, $search, $target) {
        $this->template->id = $this->id = !$id ? NULL : $id;
        if ($this->afterEdit === TRUE) {
            $this->template->id = $this->id = NULL;
            $this->afterEdit = FALSE;
        }
		$this->template->input = $this->input = !$target ? NULL : $target;
        $this->template->page = $this->page = !$page ? 1 : (int)$page;
        $this->template->orderBy = $this->orderBy = $orderBy;
        $this->template->orderHow = $this->orderHow = $orderHow;
        $this->template->orderHowReverse = $this->template->orderHow === 'DESC' ? 'ASC' : 'DESC';
        $this->template->search = $this->search = $search;
        $this->template->items = $this->repository->getAll($this->page, $this->orderBy, $this->orderHow, $this->search);
        $this->template->pagesCount = $this->repository->getPagesCount($this->search);
		if (!count($this->template->items)) $this->search ? $this->flashMessage('Zadaným vyhledávacím parametrům neodpovídá ani jedna položka.', 'danger') : $this->flashMessage('Tabulka je prázdná.', 'danger');
        $this->redrawControl();
        
    }
	
	public function renderForm($id, $input) {
		$this->id = $id;
		$this->input = $input;
	}

    protected function createComponentSearchForm() {
        $form = new Form();
        $form->addHidden('id', $this->id);
        $form->addHidden('orderBy', $this->orderBy);
        $form->addHidden('orderHow', $this->orderHow);
		$form->addHidden('input', $this->input);
        $form->addText('search')->setDefaultValue($this->search)->setAttribute('placeholder', 'Vyhledávání; jednotlivé výrazy oddělujte mezerou a poté stiskněte Enter...');
        $form->onSuccess[] = $this->searchSubmit;
        return $form;
    }
    
    public function searchSubmit(Form $form) {
        $values = $form->getValues();
        if (!$this->ajax) {
            $this->redirect('this', array($values->id, 1, $values->orderBy, $values->orderHow, $values->search, $values->input));
        } else { $this->redrawControl(); }
    }
    
    public function formSubmit(Form $form) {
      $v = $form->getValues(TRUE);
		$redirect = array(NULL, $v['page'], $v['orderBy'], $v['orderHow'], $v['search'], $v['input']);
		unset($v['page']); unset($v['orderBy']); unset($v['orderHow']); unset($v['search']); unset($v['input']);
		try {
			$this->repository->save($v);
			$this->flashMessage('Uložení položky bylo úspěšné.', 'success');
		 } catch(\PDOException $e) {
			if ((int)$e->errorInfo[1] === 1062) {
				$keyInfo = explode(' for key ', str_replace("'", '', \Nette\Utils\Strings::match($e->getMessage(), "~'(.*)'~")[0]));
				$this->flashMessage("Uložení položky selhalo (chyba: Narušení unikátního klíče '$keyInfo[1]' vložením hodnoty '$keyInfo[0]').", 'danger');
			} else { $this->flashMessage('Uložení položky selhalo (chyba: ' . $e->getMessage() . ').', 'danger'); }
		}
		if (!$this->ajax) $this->redirect('list', $redirect);
    }
        
    public function renderDelete($id, $page, $orderBy, $orderHow, $search) {
       try {
            $this->repository->remove($id);
            $this->flashMessage('Smazání položky bylo úspěšné.', 'success');
        } catch (\PDOException $e) {
			if ((int)$e->errorInfo[1] === 1451) {
				$start = strpos($e->getMessage(), 'CONSTRAINT `') + 12;
				$end = strpos($e->getMessage(), '`', $start);
				$key = substr($e->getMessage(), $start, $end - $start);
				$this->flashMessage("Smazání položky selhalo (chyba: Narušení cizího klíče '$key').", 'danger');
			} else { $this->flashMessage('Smazání položky selhalo (chyba: ' . $e->getMessage() . ').', 'danger'); }
		}
        if (!$this->ajax) $this->redirect('list', array(NULL, $page, $orderBy, $orderHow, $search));
    }
}